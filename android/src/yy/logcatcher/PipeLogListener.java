/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package yy.logcatcher;

import java.util.ArrayList;
import java.util.List;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollLogging;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;


public class PipeLogListener implements KrollLogging.LogListener
{
	private TiApplication app;
	private List<KrollModule> listeners = new ArrayList<KrollModule>();
	
	public PipeLogListener(TiApplication app)
	{
		super();
		this.app = app;
	}


	@Override
	public void onLog(int severity, String msg) {
		String level;	
		switch (severity) {
			case KrollLogging.INFO: level="INFO"; break;
			case KrollLogging.DEBUG: level="DEBUG"; break;
			case KrollLogging.WARN: level="WARN"; break;
			case KrollLogging.CRITICAL: level="CRITICAL"; break;
			case KrollLogging.ERROR: level="ERROR"; break;
			case KrollLogging.FATAL: level="FATAL"; break;
			case KrollLogging.NOTICE: level="NOTICE"; break;
			case KrollLogging.TRACE: level="TRACE"; break;
			default: level="LOG";
		}
		KrollDict data = new KrollDict();
		data.put("level", level);
		data.put("msg", msg);
		if (this.listeners.size() > 0) {
			for (KrollModule listener: listeners) {
				listener.fireEvent("error", data);
			}
		} else {
			this.app.fireAppEvent("error", data);
		}
	
	}
	
	public void addListener(KrollModule listener) {
		Log.d("PIPEEX", "adding listener");
		this.listeners.add(listener);
	}

}

